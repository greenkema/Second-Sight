version: '3.8'

services:
  consul-server1:
    image: consul:1.15.4
    container_name: consul-server1
    restart: always
    volumes:
      - consul-server1-data:/consul/data
      - ./config/consul/server1:/consul/config
    environment:
      - CONSUL_BIND_INTERFACE=eth0
      - CONSUL_CLIENT_INTERFACE=eth0
    command: >
      agent -server -ui
      -bootstrap-expect=3
      -node=consul-server1
      -client=0.0.0.0
      -datacenter=dc1
      -encrypt=${CONSUL_ENCRYPT_KEY}
      -retry-join=consul-server2
      -retry-join=consul-server3
      -config-dir=/consul/config
    networks:
      - monitoring-net
    ports:
      - "8500:8500"
      - "8600:8600/tcp"
      - "8600:8600/udp"
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 30s
      timeout: 10s
      retries: 3

  consul-server2:
    image: consul:1.15.4
    container_name: consul-server2
    restart: always
    volumes:
      - consul-server2-data:/consul/data
      - ./config/consul/server2:/consul/config
    environment:
      - CONSUL_BIND_INTERFACE=eth0
      - CONSUL_CLIENT_INTERFACE=eth0
    command: >
      agent -server
      -node=consul-server2
      -client=0.0.0.0
      -datacenter=dc1
      -encrypt=${CONSUL_ENCRYPT_KEY}
      -retry-join=consul-server1
      -retry-join=consul-server3
      -config-dir=/consul/config
    networks:
      - monitoring-net
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 30s
      timeout: 10s
      retries: 3

  consul-server3:
    image: consul:1.15.4
    container_name: consul-server3
    restart: always
    volumes:
      - consul-server3-data:/consul/data
      - ./config/consul/server3:/consul/config
    environment:
      - CONSUL_BIND_INTERFACE=eth0
      - CONSUL_CLIENT_INTERFACE=eth0
    command: >
      agent -server
      -node=consul-server3
      -client=0.0.0.0
      -datacenter=dc1
      -encrypt=${CONSUL_ENCRYPT_KEY}
      -retry-join=consul-server1
      -retry-join=consul-server2
      -config-dir=/consul/config
    networks:
      - monitoring-net
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./config/prometheus/target.json:/etc/prometheus/target.json:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-remote-write-receiver'
    networks:
      - monitoring-net
    ports:
      - "9090:9090"
    depends_on:
      - consul-server1
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://127.0.0.1:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-piechart-panel,grafana-worldmap-panel
    networks:
      - monitoring-net
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://127.0.0.1:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: always
    volumes:
      - ./config/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager-data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    networks:
      - monitoring-net
    ports:
      - "9093:9093"
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://127.0.0.1:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  pyroscope:
    image: grafana/pyroscope:latest
    container_name: pyroscope
    restart: always
    volumes:
      - pyroscope-data:/var/lib/pyroscope
      - ./config/pyroscope/pyroscope.yaml:/etc/pyroscope/pyroscope.yaml
    command:
      - -server.http-listen-port=4040
      - -pyroscopedb.data-path=/var/lib/pyroscope
      - --config.file=/etc/pyroscope/config.yaml
    networks:
      - monitoring-net
    ports:
      - "4040:4040"
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:4040/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: always
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring-net
    ports:
      - "9100:9100"
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://127.0.0.1:9100/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  consul-exporter:
    image: prom/consul-exporter:latest
    container_name: consul-exporter
    restart: always
    command:
      - '--consul.server=consul-server1:8500'
    networks:
      - monitoring-net
    depends_on:
      - consul-server1
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://127.0.0.1:9107/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  alloy:
    image: grafana/alloy:latest
    container_name: grafana-alloy
    restart: always
    volumes:
      - ./config/alloy/config.alloy:/etc/alloy/config.alloy
      - alloy-data:/var/lib/alloy/data
    environment:
      - SLS_PROJECT=${SLS_PROJECT}
      - SLS_ENDPOINT=${SLS_ENDPOINT}
      - SLS_LOGSTORE=${SLS_LOGSTORE}
      - SLS_ACCESS_KEY_ID=${SLS_ACCESS_KEY_ID}
      - SLS_ACCESS_KEY_SECRET=${SLS_ACCESS_KEY_SECRET}
    command:
      - run
      - --server.http.listen-addr=0.0.0.0:12345
      - --storage.path=/var/lib/alloy/data
      - /etc/alloy/config.alloy
    networks:
      - monitoring-net
    ports:
      - "12345:12345"
      - "4317:4317"
      - "4318:4318"
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://127.0.0.1:12345/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  consul-server1-data:
  consul-server2-data:
  consul-server3-data:
  prometheus-data:
  grafana-data:
  alertmanager-data:
  pyroscope-data:
  alloy-data:

networks:
  monitoring-net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16